{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","props","onChange","target","value","name","setContact","contacts","map","element","index","AppointmentForm","title","setTitle","contact","date","setDate","time","setTime","handleSubmit","onSubmit","type","e","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","App","ROUTES","setContacts","setAppointments","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aea6cafd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n  const handleChange = ({target}) => {\r\n    const { name, value } = target;\r\n    props.setContact(value);\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleChange}>\r\n      <option value=\"\">Please Select</option>\r\n      {\r\n        props.contacts.map((element, index) => {\r\n          return <option value={element.name} key={index}>{element.name}</option>\r\n\r\n        })\r\n      }\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker'\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={title}\r\n        name=\"title\"\r\n        onChange={(e) => setTitle(e.target.value)} \r\n        placeholder=\"Appointment Title\" />\r\n      <ContactPicker \r\n        name=\"contacts\"\r\n        contacts={contacts}\r\n        setContact={setContact} />\r\n      <input \r\n        type=\"Date\"\r\n        value={date}\r\n        name=\"date\"\r\n        min={getTodayString()}\r\n        onChange={(e) => setDate(e.target.value)} \r\n        placeholder=\"Date\" />\r\n      <input \r\n        type=\"time\"\r\n        value={time}\r\n        name=\"time\"\r\n        onChange={(e) => setTime(e.target.value) }\r\n        placeholder=\"Time\" />\r\n      <input \r\n        type=\"submit\"\r\n        value=\"Submit\"/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({ tile }) => {\r\n  \r\n  return (\r\n    <div className=\"tile-container\">\r\n      {\r\n        Object.values(tile).map((value, index) => (\r\n          <p key={index} className={`${index === 0 ? \"tile-title\" : \"\"} tile`}>\r\n            {value}\r\n          </p>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from \"../tile/Tile\"\r\n\r\nexport const TileList = ({ tiles }) => {\r\n\r\n  return (\r\n    <div> \r\n        {tiles.map((tile, index) => (\r\n            <Tile key={index} tile={tile} />\r\n        ))}\r\n    </div>\r\n  );\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({appointments, contacts, addAppointment}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n    addAppointment(title, contact, date, time);\r\n    setTitle(\"\");\r\n    setContact(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");   \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          contacts={contacts} \r\n          title={title}\r\n          contact={contact}\r\n          date={date}\r\n          time={time}\r\n          setTitle={setTitle}\r\n          setContact={setContact}\r\n          setDate={setDate}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <input \r\n          name='name'\r\n          type='text'\r\n          value={name}\r\n          placeholder=\"Name\"\r\n          onChange={(e) => setName(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        <input \r\n          name=\"phone\"\r\n          type='tel'\r\n          value={phone}\r\n          // pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"\r\n          placeholder=\"Phone Number (###-###-####)\"\r\n          onChange={(e) => setPhone(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        <input \r\n          name='email'\r\n          type='email'\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          onChange={(e) => setEmail(e.target.value)} />\r\n      </label>\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Submit\" />\r\n    </form>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport {TileList} from '../../components/tileList/TileList'\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n const [name, setName] = useState(\"\");\r\n const [phone, setPhone] = useState(\"\");\r\n const [email, setEmail] = useState(\"\");\r\n const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    if(!duplicate){\r\n      addContact(name, phone, email);\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(() =>{\r\n    const result = contacts.find(contact => contact.name === name );\r\n    if (result !== undefined) {\r\n      setDuplicate(true);\r\n    }\r\n  }, [name])\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          <br />\r\n          {duplicate ? \"Duplicate Name\" : \"\"}</h2>\r\n        <ContactForm \r\n          name={name} \r\n          phone={phone} \r\n          email={email} \r\n          setEmail={setEmail} \r\n          setPhone={setPhone} \r\n          setName={setName}\r\n          handleSubmit={handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  }; \r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  \r\n  const addContact = (name, phone, email) => {\r\n    setContacts([\r\n      ...contacts, \r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email\r\n      },\r\n    ]);\r\n  };\r\n\r\n  \r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time\r\n      }\r\n    ])\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage appointments={appointments} addAppointment={addAppointment} contacts={contacts} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}